// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Styled(Card)
    virtual={undefined}
>
    <Styled(CardItem)
        virtual={undefined}
    >
        <Styled(Left)
            virtual={undefined}
        >
            <Image
                source={
                    Object {
                        "uri": undefined,
                      }
                }
                style={
                    Object {
                        "borderRadius": 100,
                        "height": 60,
                        "width": 60,
                      }
                }
            />
            <Styled(Body)
                virtual={undefined}
            >
                <Styled(Text)
                    virtual={undefined}
                />
                <Styled(Icon)
                    active={true}
                    name="camera"
                    virtual={undefined}
                />
                <Styled(Text)
                    virtual={undefined}
                />
            </Styled(Body)>
        </Styled(Left)>
    </Styled(CardItem)>
    <Styled(CardItem)
        cardBody={true}
        virtual={undefined}
    >
        <Image
            source={
                Object {
                    "uri": undefined,
                  }
            }
            style={
                Object {
                    "height": 360,
                    "width": 360,
                  }
            }
        />
    </Styled(CardItem)>
    <Styled(CardItem)
        content={true}
        virtual={undefined}
    >
        <Styled(Text)
            virtual={undefined}
        />
    </Styled(CardItem)>
    <Styled(CardItem)
        style={
            Object {
                "justifyContent": "space-around",
              }
        }
        virtual={undefined}
    >
        <Styled(Button)
            transparent={true}
            virtual={undefined}
        >
            <Styled(Icon)
                active={true}
                name="eye"
                virtual={undefined}
            />
            <Styled(Text)
                virtual={undefined}
            />
        </Styled(Button)>
        <Styled(Button)
            transparent={true}
            virtual={undefined}
        >
            <Styled(Icon)
                active={true}
                name="heart"
                virtual={undefined}
            />
            <Styled(Text)
                virtual={undefined}
            />
        </Styled(Button)>
    </Styled(CardItem)>
</Styled(Card)>,
  "nodes": Array [
    <Styled(Card)
      virtual={undefined}
>
      <Styled(CardItem)
            virtual={undefined}
      >
            <Styled(Left)
                  virtual={undefined}
            >
                  <Image
                        source={
                              Object {
                                    "uri": undefined,
                                  }
                        }
                        style={
                              Object {
                                    "borderRadius": 100,
                                    "height": 60,
                                    "width": 60,
                                  }
                        }
                  />
                  <Styled(Body)
                        virtual={undefined}
                  >
                        <Styled(Text)
                              virtual={undefined}
                        />
                        <Styled(Icon)
                              active={true}
                              name="camera"
                              virtual={undefined}
                        />
                        <Styled(Text)
                              virtual={undefined}
                        />
                  </Styled(Body)>
            </Styled(Left)>
      </Styled(CardItem)>
      <Styled(CardItem)
            cardBody={true}
            virtual={undefined}
      >
            <Image
                  source={
                        Object {
                              "uri": undefined,
                            }
                  }
                  style={
                        Object {
                              "height": 360,
                              "width": 360,
                            }
                  }
            />
      </Styled(CardItem)>
      <Styled(CardItem)
            content={true}
            virtual={undefined}
      >
            <Styled(Text)
                  virtual={undefined}
            />
      </Styled(CardItem)>
      <Styled(CardItem)
            style={
                  Object {
                        "justifyContent": "space-around",
                      }
            }
            virtual={undefined}
      >
            <Styled(Button)
                  transparent={true}
                  virtual={undefined}
            >
                  <Styled(Icon)
                        active={true}
                        name="eye"
                        virtual={undefined}
                  />
                  <Styled(Text)
                        virtual={undefined}
                  />
            </Styled(Button)>
            <Styled(Button)
                  transparent={true}
                  virtual={undefined}
            >
                  <Styled(Icon)
                        active={true}
                        name="heart"
                        virtual={undefined}
                  />
                  <Styled(Text)
                        virtual={undefined}
                  />
            </Styled(Button)>
      </Styled(CardItem)>
</Styled(Card)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ListPhoto
        photo={
                Object {
                        "user": "",
                        "userpic_url": "",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ListPhoto {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "photo": Object {
            "user": "",
            "userpic_url": "",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Styled(Card)
          virtual={undefined}
>
          <Styled(CardItem)
                    virtual={undefined}
          >
                    <Styled(Left)
                              virtual={undefined}
                    >
                              <Image
                                        source={
                                                  Object {
                                                            "uri": undefined,
                                                          }
                                        }
                                        style={
                                                  Object {
                                                            "borderRadius": 100,
                                                            "height": 60,
                                                            "width": 60,
                                                          }
                                        }
                              />
                              <Styled(Body)
                                        virtual={undefined}
                              >
                                        <Styled(Text)
                                                  virtual={undefined}
                                        />
                                        <Styled(Icon)
                                                  active={true}
                                                  name="camera"
                                                  virtual={undefined}
                                        />
                                        <Styled(Text)
                                                  virtual={undefined}
                                        />
                              </Styled(Body)>
                    </Styled(Left)>
          </Styled(CardItem)>
          <Styled(CardItem)
                    cardBody={true}
                    virtual={undefined}
          >
                    <Image
                              source={
                                        Object {
                                                  "uri": undefined,
                                                }
                              }
                              style={
                                        Object {
                                                  "height": 360,
                                                  "width": 360,
                                                }
                              }
                    />
          </Styled(CardItem)>
          <Styled(CardItem)
                    content={true}
                    virtual={undefined}
          >
                    <Styled(Text)
                              virtual={undefined}
                    />
          </Styled(CardItem)>
          <Styled(CardItem)
                    style={
                              Object {
                                        "justifyContent": "space-around",
                                      }
                    }
                    virtual={undefined}
          >
                    <Styled(Button)
                              transparent={true}
                              virtual={undefined}
                    >
                              <Styled(Icon)
                                        active={true}
                                        name="eye"
                                        virtual={undefined}
                              />
                              <Styled(Text)
                                        virtual={undefined}
                              />
                    </Styled(Button)>
                    <Styled(Button)
                              transparent={true}
                              virtual={undefined}
                    >
                              <Styled(Icon)
                                        active={true}
                                        name="heart"
                                        virtual={undefined}
                              />
                              <Styled(Text)
                                        virtual={undefined}
                              />
                    </Styled(Button)>
          </Styled(CardItem)>
</Styled(Card)>,
        "_debugID": 2,
        "_renderedOutput": <Styled(Card)
          virtual={undefined}
>
          <Styled(CardItem)
                    virtual={undefined}
          >
                    <Styled(Left)
                              virtual={undefined}
                    >
                              <Image
                                        source={
                                                  Object {
                                                            "uri": undefined,
                                                          }
                                        }
                                        style={
                                                  Object {
                                                            "borderRadius": 100,
                                                            "height": 60,
                                                            "width": 60,
                                                          }
                                        }
                              />
                              <Styled(Body)
                                        virtual={undefined}
                              >
                                        <Styled(Text)
                                                  virtual={undefined}
                                        />
                                        <Styled(Icon)
                                                  active={true}
                                                  name="camera"
                                                  virtual={undefined}
                                        />
                                        <Styled(Text)
                                                  virtual={undefined}
                                        />
                              </Styled(Body)>
                    </Styled(Left)>
          </Styled(CardItem)>
          <Styled(CardItem)
                    cardBody={true}
                    virtual={undefined}
          >
                    <Image
                              source={
                                        Object {
                                                  "uri": undefined,
                                                }
                              }
                              style={
                                        Object {
                                                  "height": 360,
                                                  "width": 360,
                                                }
                              }
                    />
          </Styled(CardItem)>
          <Styled(CardItem)
                    content={true}
                    virtual={undefined}
          >
                    <Styled(Text)
                              virtual={undefined}
                    />
          </Styled(CardItem)>
          <Styled(CardItem)
                    style={
                              Object {
                                        "justifyContent": "space-around",
                                      }
                    }
                    virtual={undefined}
          >
                    <Styled(Button)
                              transparent={true}
                              virtual={undefined}
                    >
                              <Styled(Icon)
                                        active={true}
                                        name="eye"
                                        virtual={undefined}
                              />
                              <Styled(Text)
                                        virtual={undefined}
                              />
                    </Styled(Button)>
                    <Styled(Button)
                              transparent={true}
                              virtual={undefined}
                    >
                              <Styled(Icon)
                                        active={true}
                                        name="heart"
                                        virtual={undefined}
                              />
                              <Styled(Text)
                                        virtual={undefined}
                              />
                    </Styled(Button)>
          </Styled(CardItem)>
</Styled(Card)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListPhoto
    photo={
        Object {
            "user": "",
            "userpic_url": "",
          }
    }
/>,
}
`;
